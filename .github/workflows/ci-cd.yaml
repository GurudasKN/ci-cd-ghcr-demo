name: CI/CD Pipeline with Stages

on:
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  IMAGE_TAG: pr-${{ github.event.pull_request.number || github.run_number }}

jobs:
  build:
    name: 🏗️ Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG

  scan:
    name: 🔍 Scan Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          format: 'table'
          severity: 'HIGH,CRITICAL'
          exit-code: '0'
          output: 'trivy-report.txt'

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.txt

      - name: Post Scan Summary to PR
        run: |
          echo "## 🔍 Trivy Scan Summary" > summary.txt
          grep -E 'CRITICAL|HIGH' trivy-report.txt | wc -l | xargs echo "High/Critical Vulnerabilities:" >> summary.txt

      - name: Comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: trivy-scan
          path: summary.txt

  deploy:
    name: 🚀 Deploy to GitHub Pages (or environment)
    runs-on: ubuntu-latest
    needs: scan
    steps:
      - name: Dummy Deployment
        run: echo "Pretending to deploy image $IMAGE_NAME:$IMAGE_TAG"

  notify:
    name: 📩 Final Status
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Comment Success on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: deploy-status
          message: |
            ✅ CI/CD completed! Image $IMAGE_TAG built, scanned and deployed.
